<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAAAAIAAgAAAAIAAgAAAgAAAAICAAICAAACAgIAAgIEAAQCAAAEAgIABAIEAAIEAAACBAIAAgQ
        EAAQEAAAEBAIABAQEAAQEBgAEBAhABgQCAAYEBAAGBAYABgQIQAQGAgAEBgQABAYGAAQGCEAGBgIABgY
        EAAYGBgAGBghABgYKQAhGBAAIRgYACEYIQAhGCkAGCEQABghGAAYISEAGCEpACEhEAAhIRgAISEhACEh
        KQAhITEAKSEYACkhIQApISkAKSExABgpKQAhKRgAISkhACEpKQAhKTEAKSkhACkpKQApKTEAMSkpADEp
        MQAhMTEAKTEpACkxMQApMTkAMTEpADkxKQA5OSkAMTExADkxMQApOTEAMTkxAC01OQAxOTkAOTkxADkx
        OQA5OTkAMUI5ADlCOQAxOUIANT1CAEJCMQBCOTkAQkI5AD09QgBCQkIAOUpCADlCSgA5SkoASkI9AEJK
        QgBKSkIAQkJKAEJKSgBKSkoAUkpCAFpSQgBSSkoAQlJKAEpSSgBSUkoAWlJKAFJaSgBaWkoAQkpSAEpK
        UgBSSlIAQlJSAEpSUgBSUlIAWlJSAEpaUgBSWlIAWlpSAFJjUgBaY1IASlJaAFJSWgBaUloASlpaAFJa
        WgBaWloAUmNaAFpjWgBaa1oASlpjAFJjYwBaY2MAWmtjAGNaUgBjY1IAY1paAGNjWgBrY1oAY2taAGtr
        WgBjWmMAY2NjAGtjYwBzY2MAY2tjAGtrYwBza2MAa3NjAHNzYwBiaGsAa2trAGNzawBjc3MAa3NrAGtz
        cwBza2sAe2trAHNzawBze2sAc3NzAGt7cwBve3cAc3t7AHOEewBzhIQAe3NrAHt7awB7c3MAe3tzAHuE
        cwB7e3sAe4R7AHt7hAB7hIQAe4yEAIRzawCEe2sAhHNzAIR7cwCEhHMAhHt7AISEewCEhIQAhIyEAIx7
        cwCMhHMAjHt7AIyEewCMjHsAjISEAIyMhACUhHsAlIx7AJSEhACUjIQAHT4uAJyMhAB7jIwAiY6JAISU
        jACMlJAAlJSEAJSMjACUlIwAlJSUAJSclACUnJwAnJSEAJyMjACclIwAnJyMAJyUlACcnJQAnJycAKWU
        jAClnIwApZSUAKWclAClpZQApZycAKWlnAClpaUApa2lAK2clACtpZQArZycAK2lnACtrZwAraWlALWc
        lAC1oJgAtaWcALqqnAC1paUAvaWlAK2tpQC1raUAva2lAMatpQC1taUAvbWlAMa1pQCtra0Ata2tAL2t
        rQC1ta0AtbW1AL21rQC9va0Axq2tAL21tQDGta0Ay7qtALW9tQC9wLoAxr25AMbGvQDOwbUAy8jAAMrK
        xgDY1dAAAD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQA9PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT2+vj09PT09PT09PT09PT09PT09PT09PT09PT09PT09d76+vj09PT09PT09
        PT09PT09PT09PT09PT09PT09PYyRnWNjfT09PT09PT09PT09PT09PT09PT09PT09PT09jKhjY6Wxxr6+
        PT09PT09PT09PT09PT09PT09PT09PT1jY2OllM7G3b2+vr49PT09PT09PT09PT09PT09PT09PWNjbm+j
        r7G9xse5vr6+PT09PT09PT09PT09PT09PT09vnqIjI2Mja2jubnGxrG+vr49PT09PT09PT09PT09PT2+
        b4OCg2+MmKOOoKCw1NTGsVS+vj09PT09PT09PT09PT1vg4J6eoODjIyMoYyjvcbd3s6soMagbT2+vj09
        PT09voKDjIODg4uRjISMjJiZrbbG3eexxm252+Ly6+f3PT1DjIyMiISDjIOMcIyYj5iYo7Cwtsa93dTi
        5/fUvb49PUmLg4yMi4yMjZiDjY2Yo6KYmKCjtra2xtHn1r49PT09WIONjIyDmIyjjJiNjZitjKCamKOt
        rr29vb3GPT09PT1jmIyYo4yYmJiYoJiYmKOtoKOgraOwsbG9vYM9PT09PWOYjYyYj42goKCNoKOgo6Oj
        o62tra2x/73/vj09PT09vqCYjY2gmK2woKOjraCtrba2tra2vdb/3/89PT09PT09mKOgmKOtsK2wrbaj
        o7Cttra9trm2/93/vj09PT09PT1jra2jo7C2tq22tra2trm9t7fGub253c49PT09PT09PT2jrbatsLa2
        o7m2trq5vbm5vca9vc7UPT09PT09PT09PVStvbCwtra9vb29vcbRxsbU1NTU4r49PT09PT09PT09PUO9
        tre9uba9vcbGxtTd1N7d2+dDPT09PT09PT09PT09PTjGxsa9xsa9xs3U293i3efGvj09PT09PT09PT09
        PT09PT2MxtraxtTa293i6N7GWj09PT09PT09PT09PT09PT09PT1dbozG2sbGxsZuXT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0APT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09AIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAAB
</value>
  </data>
</root>